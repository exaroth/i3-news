#!/bin/bash

#shellcheck disable=SC2162

if [ -z ${I3_NEWS_BIN_PATH+x} ]; then
    export I3_NEWS_BIN_PATH=i3_news
fi

if ! type i3_news > /dev/null; then
    echo "i3_news binary not found in the system"
    exit 1
fi


PARAMS="$@"

PROG="$I3_NEWS_BIN_PATH --plain $PARAMS"

ELLIPSIS="..."

if [ -z ${I3NEWS_INTERVAL+x} ]; then
    export I3NEWS_INTERVAL=$((10))
fi

if [ -z ${I3NEWS_DELAY+x} ]; then
    export I3NEWS_DELAY=6
fi

if [ -z ${I3NEWS_WIDTH+x} ]; then
    export I3NEWS_WIDTH=60
fi

if [ -z ${SNIPPET_ALIGN+x} ]; then
    export SNIPPET_ALIGN="left"
fi

if [ -z ${SNIPPET_OUTPUT_PANGO+x} ]; then
    export SNIPPET_OUTPUT_PANGO=0
fi

if [ "$I3NEWS_WIDTH" -lt 30 ]; then
    I3NEWS_WIDTH=30
fi

get_text_for_page() {
	page_text=""
	text=""
    word_count=0
	total_pages=1
	IFS=' ' read -r -a words <<< "$1"
	for word in "${words[@]}"
	do
        if [[ "$text" = "" ]]; then
			text="$word"
		else 
			text="$text $word"
        fi
        word_count=$(("$word_count" + 1));
		text_l=${#text}

        comma_break=$(expr "${word: -1}" = "," "&" $word_count ">" 2)
        period_break=$(expr "${word: -1}" = "." "&" $word_count ">" 2)
		short_break=$(expr ${#word} "<" 3 "&" $word_count ">" 5)
		if [ "$text_l" -gt "$I3NEWS_WIDTH" ] || [ "$short_break" -gt 0 ] ; then
			total_pages=$(("$total_pages" + 1))
			text="$word"
            word_count=0
		else 
			if [ "$2" -eq $total_pages ]; then
				page_text="$text"
			fi
            if  [ "$comma_break" -gt 0 ] || [ "$period_break" -gt 0 ]; then
                total_pages=$(("$total_pages" + 1))
                word_count=0
                text=""
            fi
		fi
	done
	if [ "$2" -eq "$total_pages" ]; then
		page_text=$text
	fi
	echo "$page_text|$total_pages"
}

output_text() {
    snippet_length=$(("$I3NEWS_WIDTH" + ${#ELLIPSIS} + 2))
    if [ "$SNIPPET_ALIGN" = "right" ]; then
        text_line=$(echo "$1" | rev)
        text_line=$(printf "%s%0*s" "$text_line" $snippet_length " ");
        text_line=${text_line:0:$snippet_length}
        text_line=$(printf "%s" "$text_line" | rev)
    elif [ "$SNIPPET_ALIGN" = "center" ]; then
        pad_base=$(("$snippet_length" - ${#1}))
        pad=$(("$pad_base" / 2))
        rem=$(("$pad" % 2))
        lpad=$(("$pad" + "$rem"))
        text_line=$(printf "%0*s%s%0*s" $lpad " " "$1" $snippet_length " ")
        text_line=${text_line:0:$snippet_length}
    else
        text_line=$(printf "%s%0*s" "$1" $snippet_length " ");
        text_line=${text_line:0:$snippet_length}
    fi
    if [ "$SNIPPET_OUTPUT_PANGO" -gt 0 ]; then
        echo "<span font_family='monospace'>${text_line}</span>"
    else
        printf "%s\n" "${text_line}"

    fi
}

INS=$(date +%s)
SWITCH=0
PAGE=0
TOTAL_PAGES=0
ARTICLE=$(${PROG})

while true :
do
    NOW=$(date +%s)
    SWITCH=0
    if [[ $(("$NOW" - "$INS")) -gt "${I3NEWS_INTERVAL}" ]]; then
		SWITCH=1
    fi

    
    TEXT_LENGTH=${#ARTICLE}
    PAGE=$(("$PAGE" + 1))
    
    if [[ "$TEXT_LENGTH" -lt "$I3NEWS_WIDTH" ]]; then
        TOTAL_PAGES=1
        PAGE=1
        SWITCH=$(("$SWITCH" & 1))
        output_text "$ARTICLE" $PAGE $TOTAL_PAGES
    else
        TEMP=$(get_text_for_page "$ARTICLE" $PAGE)
        text=$(echo "$TEMP" | cut -f1 -d '|')
        total_pages_s=$(echo "$TEMP" | cut -f2 -d '|')
        TOTAL_PAGES=$(("$total_pages_s"))

        if [ $PAGE -lt $TOTAL_PAGES ]; then
            SWITCH=$(("$SWITCH" & 0))
            if [ "${text: -1}" = "." ] || [ "${text: -1}" = "," ]; then
                output_text "$text" $PAGE $TOTAL_PAGES
            else
                output_text "$text$ELLIPSIS" $PAGE $TOTAL_PAGES
            fi
        else 
            temp="$text"
            t_l=${#temp}
            if [ "$t_l" -lt "$I3NEWS_WIDTH" ]; then
                SWITCH=$(("$SWITCH" & 1))
                output_text "$temp" $PAGE $TOTAL_PAGES
            else
                SWITCH=$(("$SWITCH" & 1))
            fi
            PAGE=0
        fi
    fi
    if [ $SWITCH -eq 1 ]; then
        ARTICLE=$(${PROG})
        INS=$(date +%s)
        PAGE=0
        SWITCH=0
    fi
    sleep "$I3NEWS_DELAY"

done


