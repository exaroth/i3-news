#!/bin/bash
# based on: https://github.com/Anachron/i3blocks/blob/master/blocks/scroll

if ! type i3_news > /dev/null; then
    echo "i3_news binary not found in the system"
    exit 1
fi


PARAMS="$@"

EMOJI="\U1f300-\U1f5ff\U1f900-\U1f9ff\U1f600-\U1f64f\U1f680-\U1f6ff\U2600-\U26ff\U2700-\U27bf\U1f1e6-\U1f1ff\U1f191-\U1f251\U1f004\U1f0cf\U1f170-\U1f171\U1f17e-\U1f17f\U1f18e\U3030\U2b50\U2b55\U2934-\U2935\U2b05-\U2b07\U2b1b-\U2b1c\U3297\U3299\U303d\U00a9\U00ae\U2122\U23f3\U24c2\U23e9-\U23ef\U25b6\U23f8-\U23fa"

if [ -z ${BSCROLL_INTERVAL+x} ]; then
    export BSCROLL_INTERVAL=16
fi
if [ -z ${BSCROLL_DELAY+x} ]; then
    export BSCROLL_DELAY=0.5
fi
if [ -z ${BSCROLL_WIDTH+x} ]; then
    export BSCROLL_WIDTH=60
fi
if [ -z ${I3_NEWS_BIN_PATH+x} ]; then
    export I3_NEWS_BIN_PATH=i3_news
fi

ADD_STR=" | "
ADD_LENGTH=${#ADD_STR}
PROG="$I3_NEWS_BIN_PATH --plain $PARAMS"
CHECKSUM=$(echo "${PARAMS}" | md5sum | awk '{print $1}')
TMP_FILE="/tmp/.i3-news-scroll-${CHECKSUM}"

while true :
do
    if [[ -f "${TMP_FILE}" ]]; then
        OUT_TEXT=$(head -n 1 "$TMP_FILE" | tail -1)
        SCROLL_POS=$(head -n 2 "$TMP_FILE" | tail -1)
        INS=$(head -n 3 "$TMP_FILE" | tail -1)
    else
        OUT_TEXT=$(${PROG})
        INS=$(date +%s)
        SCROLL_POS=0
    fi

    NOW=$(date +%s)
    if [[ $(("$NOW" - "$INS")) -gt "${BSCROLL_INTERVAL}" ]]; then
        OUT_TEXT=$(${PROG})
        INS=$(date +%s)
        SCROLL_POS=0
        OUT_TEXT=$(echo "$OUT_TEXT" | sed -e "s/&/and/g" -e "s/</lt/g" -e "s/>/gt/g")
        OUT_TEXT=$(echo "$OUT_TEXT" | LC_ALL=UTF-8 sed -e "s/[$(printf $EMOJI)]//g")
        OUT_TEXT=$(echo "$OUT_TEXT" | sed -e "s/#[a-zA-Z0-9]*//g")
    fi

    if [[ $? -ne 0 ]]; then
        sleep 1
        echo "${PROG}"
        exit 33
    fi

    if [[ "${OUT_TEXT}" ]]; then
        if [[ "$OUT_TEXT" = "No News" ]]; then
            echo "<span font_family='monospace'>${OUT_TEXT}</span>"
            sleep 1
        fi
        TEXT_LENGTH=${#OUT_TEXT}

        if [[ "$TEXT_LENGTH" -lt "$BSCROLL_WIDTH" ]]; then
            pad_base=$(("$BSCROLL_WIDTH" - "$TEXT_LENGTH"))
            pad=$(("$pad_base" / 2))
            rem=$(("$pad" % 2))
            lpad=$(("$pad" + "$rem"))
            TEXT_LINE=$(printf "%0*s%s%0*s" "$lpad" " " "$OUT_TEXT" "$BSCROLL_WIDTH" " ");
            SCROLL_POS=0
            TEXT_LINE=${TEXT_LINE:$SCROLL_POS:$BSCROLL_WIDTH}
            echo "<span font_family='monospace'>${TEXT_LINE}</span>"
            printf "%s\n" "${OUT_TEXT}" "${SCROLL_POS}" "${INS}" > "${TMP_FILE}"
        else
            MAX_OFFSET=$((TEXT_LENGTH +ADD_LENGTH -1))


            if [[ "${SCROLL_POS}" -gt "${MAX_OFFSET}" ]]; then
                SCROLL_POS=0
            fi

            TEXT_LINE="${OUT_TEXT}${ADD_STR}${OUT_TEXT}${ADD_STR}${OUT_TEXT}"
            TEXT_LINE=${TEXT_LINE:$SCROLL_POS:$BSCROLL_WIDTH}

            echo "<span font_family='monospace'>${TEXT_LINE}</span>"
            SCROLL_POS=$((SCROLL_POS +1))
            printf "%s\n" "${OUT_TEXT}" "${SCROLL_POS}" "${INS}" > "${TMP_FILE}"
        fi

        read -t "${BSCROLL_DELAY}" click
        if [[ $click -eq 1 ]]; then
            cmd="$I3_NEWS_BIN_PATH --get-url $PARAMS"
            url=$($cmd)
            if [ -z ${I3_NEWS_BROWSER_CMD+x} ]; then
                xdg-open "$url" &
            else
                "$I3_NEWS_BROWSER_CMD" "$url" &
            fi
            OUT_TEXT=$(${PROG})
            INS=$(date +%s)
            SCROLL_POS=0
            printf "%s\n" "${OUT_TEXT}" "${SCROLL_POS}" "${INS}" > "${TMP_FILE}"
            continue
        fi
    else
        sleep 1
    fi
done

