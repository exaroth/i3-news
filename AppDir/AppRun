#!/bin/sh
HERE="$(dirname "$(readlink -f "${0}")")"

export PATH="$HERE"/bin:"$HERE"/usr/bin:"$PATH"
export LD_LIBRARY_PATH="$HERE"/usr/lib:"$LD_LIBRARY_PATH"

export I3_NEWS_HOME="$HOME"/.config/i3_news
export I3_NEWS_BIN_PATH="$HERE"/usr/local/bin/i3_news
export ZSCROLL_EXE="python3 $HERE"/usr/local/bin/zscroll
export BSCROLL_SCRIPT="$HERE"/usr/local/bin/bscroll
export PAGINATE_SCRIPT="$HERE"/usr/local/bin/paginate

if [ -z ${I3_NEWS_BROWSER_CMD+x} ]; then
    export I3_NEWS_BROWSER_CMD="$BROWSER"
fi
if [ -z ${ZSCROLL_INTERVAL+x} ]; then
    export ZSCROLL_INTERVAL=10
fi
if [ -z ${ZSCROLL_DELAY+x} ]; then
    export ZSCROLL_DELAY=0.6
fi
if [ -z ${ZSCROLL_WIDTH+x} ]; then
    export ZSCROLL_WIDTH=40
fi

if ! type newsboat > /dev/null; then
    echo "Newsboat binary not found in the system"
    exit 1
fi

newsboat_reload() {
    if type pgrep > /dev/null; then
        while pgrep newsboat > /dev/null; do sleep 2; done
    fi
    mkdir -p "$I3_NEWS_HOME";
    if [ -z "$( ls -A "$I3_NEWS_HOME" )" ]; then
        echo "No configurations found in " "$I3_NEWS_HOME";
        return
    fi
    for dir in "$I3_NEWS_HOME"/*/
    do
        dir=${dir%*/}
        echo "i3-news: Reloading news for config ${dir##*/}"
        newsboat -x reload -c "${dir}"/cache.db -u "${dir}"/urls
    done
}

get_url_fpath() {
    checksum=$(echo "$1" | md5sum | awk '{print $1}')
    echo  "/tmp/.i3-news-scroll-${checksum}.url"
}

if [ "$1" = "reload" ]; then
    newsboat_reload;
# polybar 
elif [ "$1" = "open" ]; then
    all_args=("$@")
    params="${all_args[@]:1}"
    url_fpath=$(get_url_fpath "$params")
    if [ -f "$FILE" ]; then
        url=$(cat "$url_fpath")
        rm "$url_fpath"
    else
        url="$($I3_NEWS_BIN_PATH --get-url ${params})"
    fi
    if [ -n "${I3_NEWS_BROWSER_CMD+x}" ]; then
        $I3_NEWS_BROWSER_CMD "$url"
    else
        xdg-open "$url"
    fi
elif [ "$1" = "zscroll" ]; then
    all_args=("$@")
    i3_news_command="$I3_NEWS_BIN_PATH --plain ${all_args[@]:1}"
    if ! eval "$i3_news_command" > /dev/null; then
        exit
    fi
    $ZSCROLL_EXE -l "$ZSCROLL_WIDTH" \
        --delay "$ZSCROLL_DELAY" \
        --match-command "$i3_news_command" \
        --update-check true \
        --update-interval "$ZSCROLL_INTERVAL" "$i3_news_command" &
    wait
elif [ "$1" = "bscroll" ] || [ "$1" = "scroll" ] || [ "$1" = "tick" ]  ; then
    if [ "$1" = "tick" ]; then
        I3_NEWS_CONTINUOUS_SCROLL=1
    fi
    all_args=("$@")
    params="${all_args[@]:1}"
    url_file=$(get_url_fpath "$params")
    I3_NEWS_BIN_PATH=$I3_NEWS_BIN_PATH \
    I3_NEWS_CONTINUOUS_SCROLL=$I3_NEWS_CONTINUOUS_SCROLL \
    I3_NEWS_BROWSER_CMD=$I3_NEWS_BROWSER_CMD \
    URL_FILE_PATH="$url_file" \
    $BSCROLL_SCRIPT "$params"
elif [ "$1" = "paginate" ]; then
    all_args=("$@")
    params="${all_args[@]:1}"
    I3_NEWS_BIN_PATH=$I3_NEWS_BIN_PATH \
    I3_NEWS_BROWSER_CMD=$I3_NEWS_BROWSER_CMD \
    $PAGINATE_SCRIPT "$params"
# i3 blocks handler
elif [[ "${BLOCK_BUTTON}" -eq 1 ]]; then
    url="$($I3_NEWS_BIN_PATH --get-url -c $short_text)"
    if [ -n "${I3_NEWS_BROWSER_CMD+x}" ]; then
        $I3_NEWS_BROWSER_CMD "$url"
    else
        xdg-open "$url"
    fi
    $I3_NEWS_BIN_PATH -b -c "$short_text"
elif [ "$1" = "version" ]; then
    cat "$HERE"/VERSION
elif [ "$1" = "--help" ] || [ "$1" = "-h" ]  ; then
    echo "Usage: i3news ?<command> <options>

Commands: open|reload|paginate|scroll|tick|version

Options:
  -c, --configs       Snippet configuration or configurations to use
  -s, --i3status      I3status output
  -b, --i3blocks      I3blocks output
  -p, --polybar       Polybar output
  -w, --waybar        Waybar output
  -a, --add-config    Add new i3-news configuration
  -r, --rm-config     Remove existing configuration
  -e, --edit-config   Edit urls for given configuration
      --get-url       Retrieve url for currently displayed headline
      --plain         Plain output
      --random        Retrieve headlines using random strategy
      --latest        Retrieve headlines prioritising latest articles
      --debug         Print debug info
  -h, --help          Print help
    "
else
    $I3_NEWS_BIN_PATH "$@"
fi
